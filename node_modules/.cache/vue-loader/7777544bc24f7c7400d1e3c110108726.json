{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue?vue&type=template&id=94609c92&scoped=true","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue","mtime":1620399868991},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iZmlsZXVwbG9hZCIgdi1iaW5kOnN0eWxlPSJ7ZGlzcGxheTpncmlkfSI+CiAgICA8aDE+RmlsZSBVcGxvYWQgUGFnZTwvaDE+CiAgICA8aW5wdXQgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9Ik5hbWUgb2YgdGhlIERhdGFzZXQiIHYtbW9kZWw9ZGF0YXNldHMuZGF0YU5hbWUgY2xhc3M9ImZvcm0tY29udHJvbCI+CiAgICA8cCBpZD0ibXNnIj48L3A+PGJyPjxicj4KICAgIDxpbnB1dCB0eXBlPSJmaWxlIiBhY2NlcHQ9Ii5jc3YiIEBjaGFuZ2U9InNlbGVjdEZpbGUiPjxidXR0b24gQGNsaWNrPSJ1cGxvYWRGaWxlIj5VcGxvYWQ8L2J1dHRvbj48YnI+PGJyPgogICAgPHVsIGlkPSJsaXN0Ij4gPC91bD4KICA8L2Rpdj48YnI+PGJyPgogIDxkaXYgaWQ9InZpcyI+PC9kaXY+Cg=="},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"fileupload\" v-bind:style=\"{display:grid}\">\n    <h1>File Upload Page</h1>\n    <input type=\"text\" placeholder=\"Name of the Dataset\" v-model=datasets.dataName class=\"form-control\">\n    <p id=\"msg\"></p><br><br>\n    <input type=\"file\" accept=\".csv\" @change=\"selectFile\"><button @click=\"uploadFile\">Upload</button><br><br>\n    <ul id=\"list\"> </ul>\n  </div><br><br>\n  <div id=\"vis\"></div>\n</template>\n\n<script>\nimport firebase from 'firebase';\nimport * as d3 from 'd3';\nimport {db} from '../main'\n\nexport default {\n  name: 'fileUpload',\n  data () {\n      return {\n        datasets: {\n          fileLink: null,\n          dataName: null,\n        },\n          selectedFile: null,\n          datasetNo: 0\n      }\n  },\n  mounted() {\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\n                                  // the previous uploaded datasets are visible in the page.\n  },\n  methods: {\n      selectFile(event) {\n          this.selectedFile = event.target.files[0] //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\n          //TODO: Add proper checks to ensure that the files given are csv files.\n      },\n      uploadFile() {\n          let fileName = `${this.selectedFile.name}`;\n          var storageRef = firebase.storage().ref(fileName);\n          let uploadTask = storageRef.put(this.selectedFile);\n          uploadTask.on('state_changed', () => {\n          }, (error) => {\n            //Handle unsuccessfull uploads.\n            console.log(error);\n          }, () => {\n            //Handle successfull uploads.\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n              this.datasets.fileLink = downloadURL;\n              this.saveDataToDB();\n            })\n          })\n          },\n      saveDataToDB() {\n          db.collection(\"datasets\").add(this.datasets).then((docRef) => {\n            var sucMsg = document.getElementById(\"msg\")\n            sucMsg.innerHTML = \"The dataset has been uploaded successfully.\"\n            console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch( (error) => {\n            console.error(\"Error adding document: \", error);\n          })\n          },\n      showDatabaseEntries(name, link) {\n          var ul = document.getElementById('list');\n          var header = document.createElement('h2');\n          var _name = document.createElement('li');\n          var _visualise = document.createElement('button');\n          var visDiv = document.getElementById('vis');\n         // var testParaghraph = document.createElement(\"h2\");\n          header.innerHTML = \"Dataset-\"+ (++this.datasetNo);\n          _name.innerHTML=\"Name of the dataset: \"+name;\n          _visualise.innerHTML = \"Visualise\";\n          _visualise.onclick = async () => {\n            visDiv.innerHTML=\"\";\n            const response = await fetch(link);\n            const data = d3.csvParse(await response.text(), d3.autoType);\n            var edges = [];\n            var nodes = [];\n            //console.log(data);\n            data.forEach((x) => {\n              var objEdges = {}\n              objEdges[\"source\"] = x.fromId;\n              objEdges[\"target\"] = x.toId;\n              edges.push(objEdges);\n              var objNodesTo = {}\n              var objNodesFrom = {}\n              var index = nodes.findIndex(o => o.employeeID == x.fromId)\n              if(index === -1) {\n                objNodesFrom[\"employeeID\"] = x.fromId;\n                nodes.push(objNodesFrom);\n              }\n              var index2 = nodes.findIndex(o => o.employeeID == x.toId)\n              if(index2 === -1) {\n                objNodesTo[\"employeeID\"] = x.toId;\n                nodes.push(objNodesTo);\n              }\n            })\n            //testParaghraph.innerHTML = data.columns.length;\n            //visDiv.appendChild(testParaghraph);\n            console.log(edges);\n            console.log(nodes);\n            this.generateNetwork(edges, nodes);\n          }\n          ul.appendChild(header);\n          ul.appendChild(_name);\n          ul.appendChild(_visualise);\n        },\n      getAllDatabaseEntries() {\n          db.collection('datasets').get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n              let name = doc.data().dataName;\n              let link = doc.data().fileLink;\n              this.showDatabaseEntries(name, link);\n            }\n            )\n          }\n          )\n        },\n    generateNetwork(edges, nodes) {\n      var w = 500;\n      var h = 500;\n\n      var svg = d3\n        .select(\"#vis\")\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .style(\"background\", \"black\");\n      \n      var simulation = d3.forceSimulation(nodes)\n          .force(\"charge\", d3.forceManyBody().strength(-5))\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\n          .force(\"center\", d3.forceCenter(w / 2, h / 2))\n          .on(\"end\", ticked);\n\n        var link = svg\n          .append(\"g\")\n          .attr(\"class\", \"links\")\n          .selectAll(\"line\")\n          .data(edges)\n          .enter()\n          .append(\"line\")\n          .style(\"stroke\", \"#aaa\");\n\n        var node = svg\n          .append(\"g\")\n          .attr(\"class\", \"nodes\")\n          .selectAll(\"circle\")\n          .data(nodes)\n          .enter()\n          .append(\"circle\")\n          .attr(\"r\", 5)\n          .attr(\"fill\", function() {return \"red\";});\n        \n        function ticked() {\n          link\n            .attr(\"x1\", function(d) {\n              return d.source.x;\n            })\n            .attr(\"y1\", function(d) {\n              return d.source.y;\n            })\n            .attr(\"x2\", function(d) {\n              return d.target.x;\n            })\n            .attr(\"y2\", function(d) {\n              return d.target.y;\n            });\n            \n            node\n              .attr(\"cx\", function(d) {\n              return d.x;\n            })\n              .attr(\"cy\", function(d) {\n              return d.y;\n            });\n        }\n        console.log(simulation);\n}\n}\n}\n\n\n</script>\n<style scoped>\n  ul{\n    list-style-type: none;\n  }\n  .edges line {\n      stroke: rgb(255, 255, 255);\n      stroke-opacity: 0.6;\n    }\n\n    .nodes circle {\n      stroke: rgb(255, 255, 255);\n      stroke-width: 1.5px;\n    }\n</style>"]}]}